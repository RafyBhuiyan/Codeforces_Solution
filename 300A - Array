#include<bits/stdc++.h>
#include<string.h>
#define ll long long int
#define br <<"\n";
#define no "NO"
#define yes "YES"
#define vecint vector<int>
#define vecll vector<long long int>
#define vecstring vector<string>
#define push push_back
#define decimal(n) cout<<fixed<<setprecision(n);
#define For(i,n) for(int i=0;i<n;i++)
#define Forran(i,n,a) for(int i=n;i<a;i++)
#define Forrevran(i,n,a) for(int i=n-1;i>=a;i--)
#define Forrev(i,n) for(int i = n-1; i >= 0; i--)
#define total(v) accumulate(v.begin(),v.end(),0)
#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
bool isprime(const ll n)
{
    if (n <= 1)
        return false;
    if (n <= 3)
        return true;
    if (n % 2 == 0 or n % 3 == 0)
        return false;
    for (ll i = 5; i * i <= n; i += 6)
        if (n % i == 0 or n % (i + 2) == 0)
            return false;
    return true;
}
int gcd(ll a,ll b)
{
    while(a!=0)
    {
        if(a<b)
            swap(a,b);
        a=a%b;
    }
    return b;
}
int lcm(ll a, ll b)
{
    return a*b/gcd(a,b);
}
bool descending(int x, int y)
{
    return x > y;   // vector sorting use sort(v.begin(),v.end(),descending);
}
bool vecfind(vector<ll>ra,int x)
{
    if(find(ra.begin(),ra.end(),x)!=ra.end())
    {
        return true;
    }
    else
    {
        return false;
    }
}
int main()
{
    fastio
    ll n,a,i;
    vecll ra;
    cin>>n;
    For(i,n)
    {
        cin>>a;
        ra.push(a);
    }
    sort(ra.begin(),ra.end());
    cout<<1<<" "<<ra[0] br;
    if(ra[n-1]>0)
    {
        cout<<1<<" "<<ra[n-1] br;
        cout<<n-2<<" ";
        Forran(i,1,n-1)
        {
            cout<<ra[i]<<" ";
        }
        cout br;
    }
    else
    {
        cout<<2<<" "<<ra[1]<<" "<<ra[2] br;
        cout<<n-3<<" ";
        Forran(i,3,n)
        {
            cout<<ra[i]<<" ";
        }
        cout br;
    }
    return 0;
}
